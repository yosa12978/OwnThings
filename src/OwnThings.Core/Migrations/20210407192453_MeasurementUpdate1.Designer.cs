// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OwnThings.Core.Data;

namespace OwnThings.Core.Migrations
{
    [DbContext(typeof(OwnThingsContext))]
    [Migration("20210407192453_MeasurementUpdate1")]
    partial class MeasurementUpdate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OwnThings.Core.Models.Device", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ownerid")
                        .HasColumnType("bigint");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ownerid");

                    b.ToTable("devices");
                });

            modelBuilder.Entity("OwnThings.Core.Models.Measurement", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("deviceid")
                        .HasColumnType("bigint");

                    b.Property<long?>("ownerid")
                        .HasColumnType("bigint");

                    b.Property<string>("payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("deviceid");

                    b.HasIndex("ownerid");

                    b.ToTable("measurements");
                });

            modelBuilder.Entity("OwnThings.Core.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("regDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("OwnThings.Core.Models.Device", b =>
                {
                    b.HasOne("OwnThings.Core.Models.User", "owner")
                        .WithMany("devices")
                        .HasForeignKey("ownerid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("owner");
                });

            modelBuilder.Entity("OwnThings.Core.Models.Measurement", b =>
                {
                    b.HasOne("OwnThings.Core.Models.Device", "device")
                        .WithMany("measurements")
                        .HasForeignKey("deviceid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OwnThings.Core.Models.User", "owner")
                        .WithMany()
                        .HasForeignKey("ownerid");

                    b.Navigation("device");

                    b.Navigation("owner");
                });

            modelBuilder.Entity("OwnThings.Core.Models.Device", b =>
                {
                    b.Navigation("measurements");
                });

            modelBuilder.Entity("OwnThings.Core.Models.User", b =>
                {
                    b.Navigation("devices");
                });
#pragma warning restore 612, 618
        }
    }
}
